=head1 NAME

Unicode::UTF8 - Encoding and decoding of interchangeable UTF-8 encoding.

=head1 SYNOPSIS

    use Unicode::UTF8 qw[decode_utf8 encode_utf8];
    
    $string = decode_utf8($octets);
    $octets = encode_utf8($string);

=head1 DESCRIPTION

This module provides functions to encode and decode interchangeable UTF-8 as 
defined by Unicode and ISO/IEC 10646:2011.

=head1 FUNCTIONS

=head2 decode_utf8($octets)

Returns an decoded representation of C<$octets> in UTF-8 encoding as a character
string.

=head2 encode_utf8($string)

Returns an encoded representation of C<$string> in UTF-8 encoding as an octet
string.

=head1 EXPORTS

None by default. All functions can be exported using the C<:all> tag or individually.

=head1 DIAGNOSTICS

=over 4

=item Can't decode a wide character string

(F) C<decode_utf8()> called with a wide character string.

=item Can't decode ill-formed %s octet sequence <%s>

(F) C<decode_utf8()> called with octets containing ill-formed UTF-8.

=item Can't interchange noncharacter code point U+%.4X

(F) Noncharacters is permanently reserved for internal use and that
should never be interchanged. Noncharacters consist of the values U+nFFFE and
U+nFFFF (where n is from 0 to 10^16) and the values U+FDD0..U+FDEF.

=item Can't map surrogate code point U+%.4X

(F) Surrogate code points are designated only for surrogate code units in the 
UTF-16 character encoding form. Surrogates consist of code points in the range 
U+D800 to U+DFFF.

=item Can't map restricted code point U-%.8X

(F) Code points in the range U-00110000 to U-7FFFFFFF.

ISO/IEC 10646 originally defined codespace up to U-7FFFFFFF but it was restricted
in 2000 (JTC1/SC2/WG2 N 2225 RESOLUTION M38.6) to U+10FFFF.

=item Can't map super code point %.8X

(F) Code points in the range 2^31 to 2^64-1.

=back

=head1 SEE ALSO

=over 4

=item L<Encode>

=back

=head1 AUTHOR

Christian Hansen C<chansen@cpan.org>

=head1 COPYRIGHT

Copyright 2011 by Christian Hansen.

This library is free software; you can redistribute it and/or modify 
it under the same terms as Perl itself.

